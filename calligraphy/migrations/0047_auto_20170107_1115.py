# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-07 11:01
#
# Goes through and oppulates transform type according to the following
#
# None:  No chars
# Old:   Old Transform Type
# New:   New Transform Type
# var:   Variable transform tkype
######################################################
from __future__ import unicode_literals

from django.db import migrations, models


def populateRow(apps) -> None:
    Page = apps.get_model('calligraphy', 'Page')
    PageMultiplier = apps.get_model('calligraphy', 'PageMultiplier')
    Char = apps.get_model('calligraphy', 'Character')
    
    pages = Page.objects.all()
    for page in pages:
        pgrestuls = PageMultiplier.objects.filter(parent_page_id=page.id)
        if len(pgrestuls) is not 0:
            page.transform_type = "var"
        else:
            if page.i_transform_type_new:
                page.transform_type = "new"
            else:
                if page.i_transform_type_new is False:
                    page.transform_type = "old"
                else:
                    maybeChars = Char.objects.filter(parent_page_id = page.id)
                    if len(maybeChars) is not 0:
                        raise Exception("Shouldnt be any chars here")
                    else:
                        page.transform_type = "none"
        page.save()
    
        

def do_stuff(apps, schemd_editor) -> None:
    populateRow(apps)


class Migration(migrations.Migration):

    dependencies = [
        ('calligraphy', '0046_page_transform_type'),
    ]

    operations = [ migrations.RunPython(do_stuff)
    ]
